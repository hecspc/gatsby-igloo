{"expireTime":9007200842491709000,"key":"gatsby-plugin-mdx-entire-payload-c82ebb3c9a0480a544a6868786c6a601-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"This is about Button Styles","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":30,"offset":30},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":30,"offset":30},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"How to write styles for the button.","position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":4,"column":36,"offset":67},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":4,"column":36,"offset":67},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Button Styles\",\"description\":\"All About Button Style\",\"tab\":\"Style\",\"tabOrder\":2,\"publishToStyleGuide\":true}","position":{"start":{"line":7,"column":1,"offset":70},"end":{"line":7,"column":147,"offset":216},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":147,"offset":216}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Button Styles\",\n  \"description\": \"All About Button Style\",\n  \"tab\": \"Style\",\n  \"tabOrder\": 2,\n  \"publishToStyleGuide\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"This is about Button Styles\"), mdx(\"p\", null, \"How to write styles for the button.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Button Styles\",\n  \"description\": \"All About Button Style\",\n  \"tab\": \"Style\",\n  \"tabOrder\": 2,\n  \"publishToStyleGuide\": true\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`This is about Button Styles`}</h1>\n    <p>{`How to write styles for the button.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}